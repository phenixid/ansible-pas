---

- name: "Create DIGO_HOME: {{ digo_install_directory }}/digo"
  file:
    path: "{{ digo_install_directory }}/digo"
    owner: "{{ digo_service_user }}"
    group: "{{ digo_service_group }}"
    mode: 0400
    state: directory
  become: yes

- name: "Remove directories"
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ digo_install_directory }}/digo/config"
    - "{{ digo_install_directory }}/digo/lib"
    - "{{ digo_install_directory }}/digo/public"
    - "{{ digo_install_directory }}/digo/resources"
  become: yes

- name: "Install from zip file {{ digo_installer.remote_path }}/{{ digo_installer.local_path | basename }}"
  unarchive:
    remote_src: yes
    src: "{{ digo_installer.remote_path }}/{{ digo_installer.local_path | basename }}"
    dest: "{{ digo_install_directory }}"
    owner: "{{ digo_service_user }}"
    group: "{{ digo_service_group }}"
  become: yes

- name: "Add TLS trust"
  set_fact:
    digo_ssl_trust_file: "{{ digo_user_service_ssl_trust.remote_path }}/{{ digo_user_service_ssl_trust.local_path | basename }}"
  when: digo_user_service_ssl_trust is not undefined

- name: "Add TLS trust"
  copy:
    src: "{{ digo_user_service_ssl_trust.local_path }}"
    dest: "{{ digo_ssl_trust_file }}"
    mode: 0400
    owner: "{{ digo_service_user }}"
  become: yes
  when: digo_user_service_ssl_trust is not undefined

- name: "Add TLS key"
  set_fact:
    ssl_key_file: "{{ digo_user_service_ssl_key.remote_path }}/{{ digo_user_service_ssl_key.local_path | basename }}"
  when: digo_user_service_ssl_key is not undefined

- name: "Add TLS key"
  copy:
    src: "{{ digo_user_service_ssl_key.local_path }}"
    dest: "{{ ssl_key_file }}"
    mode: 0400
    owner: "{{ digo_service_user }}"
  become: yes
  when: digo_user_service_ssl_key is not undefined

- name: "Add keys and SAML trust"
  file:
    path: "{{ item.remote_path }}"
    owner: "{{ digo_service_user }}"
    group: "{{ digo_service_group }}"
    mode: 0400
    state: directory
  with_items:
    - "{{ digo_saml_trust }}"
    - "{{ digo_private_key }}"
    - "{{ digo_certificate }}"
  become: yes

- name: "Add keys and SAML trust"
  copy:
    src: "{{ item.local_path }}"
    dest: "{{ item.remote_path }}/{{ item.local_path | basename }}"
    mode: 0400
    owner: "{{ digo_service_user }}"
  with_items:
    - "{{ digo_saml_trust }}"
    - "{{ digo_private_key }}"
    - "{{ digo_certificate }}"
  become: yes

- name: "Add log configuration"
  copy:
    src: "{{ digo_log4j2_config_file }}"
    dest: "{{ digo_home }}/config/log4j2.xml"
    mode: 0400
    owner: "{{ digo_service_user }}"
  become: yes
  when: digo_log4j2_config_file is defined

- name: "Add hazelcast configuration"
  copy:
    src: "{{ digo_hazelcast_config_file }}"
    dest: "{{ digo_home }}/config/hazelcast.xml"
    mode: 0400
    owner: "{{ digo_service_user }}"
  become: yes
  when: digo_hazelcast_config_file is defined

- name: "Render config.json"
  template:
    src: "config.json.j2"
    dest: "{{ digo_home }}/config/config.json"
    mode: 0400
    owner: "{{ digo_service_user }}"
  become: yes

- name: "Render start.sh"
  template:
    src: "start.sh.j2"
    dest: "{{ digo_home }}/start.sh"
    mode: 0500
    owner: "{{ digo_service_user }}"
  become: yes

